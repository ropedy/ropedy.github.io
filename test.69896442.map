{"version":3,"sources":["lib/CharacterCanvas.js","src/test/test.js"],"names":["CharacterCanvas","id","width","height","options","_populateUnsetOptionsWithDefaults","rows","element","document","querySelector","Object","assign","monitorHeight","clientHeight","monitorWidth","clientWidth","rowHeight","colWidth","style","fontFamily","fontSize","color","fontColor","backgroundColor","_createRows","i","row","createElement","classList","add","characters","j","character","innerHTML","getCoordinates","x","y","hightlightCharacters","push","append","defaults","def","hasOwnProperty","css","test","run","canvas","player","char","blocks","Math","floor","random","some","coords","draw","clear","setCharacter","textShadow","obj","tryMove","outOfBounds","blockOnTheWay","onkeydown","evt","key"],"mappings":"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","file":"test.69896442.map","sourceRoot":"..\\app","sourcesContent":["\"use strict\";\r\n\r\nclass CharacterCanvas {\r\n  constructor(id, width, height, options = {}) {\r\n    this._populateUnsetOptionsWithDefaults(options)\r\n    this.options = options;\r\n\r\n    this.rows = [];\r\n    this.element = document.querySelector(\"#\" + id);\r\n    Object.assign(this, { width, height });\r\n\r\n    this.monitorHeight = this.element.clientHeight;\r\n    this.monitorWidth = this.element.clientWidth;\r\n    this.rowHeight = this.monitorHeight / this.height;\r\n    this.colWidth = this.monitorWidth / this.width;\r\n\r\n    this.element.style.fontFamily = this.options.fontFamily;\r\n    this.element.style.fontSize = this.rowHeight + \"px\";\r\n    this.element.style.color = this.options.fontColor;\r\n    this.element.style.backgroundColor = this.options.backgroundColor;\r\n\r\n    this._createRows();\r\n  }\r\n\r\n  _createRows() {\r\n    for (let i = 0 ; i < this.height ; i++) {\r\n      const row = document.createElement(\"div\");\r\n\r\n      row.style.height = this.rowHeight + \"px\";\r\n\r\n      row.classList.add(\"row\");\r\n\r\n      row.characters = [];\r\n\r\n      for (let j = 0 ; j < this.width ; j++) {\r\n        const character = document.createElement(\"span\");\r\n        const char = \" \";\r\n        character.innerHTML = char;\r\n        character.style.width = this.colWidth + \"px\";\r\n        character.style.height = this.rowHeight + \"px\";\r\n        character.style.color = this.options.fontColor;\r\n        character.style.backgroundColor = this.options.backgroundColor;\r\n\r\n        character.getCoordinates = () => {\r\n         return { x: j, y: i};\r\n        }\r\n\r\n        character.classList.add(\"character\");\r\n\r\n        if (this.options.hightlightCharacters) {\r\n          character.classList.add(\"invert-on-hover\");\r\n        }\r\n\r\n        row.characters.push(character);\r\n        row.append(character);\r\n      }\r\n\r\n      this.rows.push(row);\r\n      this.element.append(row);\r\n    }\r\n  }\r\n\r\n  _populateUnsetOptionsWithDefaults(options) {\r\n    const defaults = {\r\n      fontFamily: \"Courier New, Courier, monospace\",\r\n      fontColor: \"white\",\r\n      backgroundColor: \"black\",\r\n      hightlightCharacters: true\r\n    }\r\n\r\n    for (const def in defaults) {\r\n      if (!options.hasOwnProperty(def)) {\r\n        options[def] = defaults[def];\r\n      }\r\n    }\r\n  }\r\n\r\n  setCharacter(x, y, character, css = {}) {\r\n    this.rows[y].characters[x].innerHTML = character;\r\n\r\n    for (const style in css) {\r\n      this.rows[y].characters[x].style[style] = css[style];\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    for (let x = 0 ; x < this.height ; x++) {\r\n      for (let y = 0 ; y < this.width ; y++) {\r\n        this.rows[x].characters[y].innerHTML = \" \";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default CharacterCanvas;","\"use strict\";\r\n\r\nimport CharacterCanvas from \"../../lib/CharacterCanvas\";\r\n\r\nconst test = {\r\n  run: () => {\r\n    const canvas = new CharacterCanvas(\"character-canvas\", 10, 10, {\r\n      fontFamily: \"Lucida Console, Monaco, monospace\"\r\n    });\r\n\r\n    const player = {\r\n      x: 2,\r\n      y: 2,\r\n      char: \"@\"\r\n    }\r\n    const blocks = [];\r\n\r\n    for (let i = 0 ; i < 10 ; i++) {\r\n      const x = Math.floor(Math.random() * 10);\r\n      const y = Math.floor(Math.random() * 10);\r\n      const char = \"#\";\r\n\r\n      if ([player, ...blocks].some(coords => coords.x === x && coords.y === y)) {\r\n        i--;\r\n\r\n        continue;\r\n      }\r\n\r\n      blocks.push({ x, y, char });\r\n    }\r\n\r\n    const draw = () => {\r\n      canvas.clear();\r\n\r\n      canvas.setCharacter(player.x, player.y, player.char, {\r\n        color: \"green\",\r\n        textShadow: \"0 0 25px green\"\r\n      });\r\n\r\n      for (const obj of blocks) {\r\n        canvas.setCharacter(obj.x, obj.y, obj.char, {\r\n          color: \"red\",\r\n          textShadow: \"0 0 25px red\"\r\n        });\r\n      }\r\n    }\r\n\r\n    draw();\r\n\r\n    const tryMove = (x, y) => {\r\n      const outOfBounds = x < 0 || x > 9 || y < 0 || y > 9;\r\n      const blockOnTheWay = blocks.some(coords => coords.x === x && coords.y === y);\r\n\r\n      if (!outOfBounds && !blockOnTheWay) {\r\n        player.x = x;\r\n        player.y = y;\r\n\r\n        draw();\r\n      }\r\n    }\r\n\r\n    document.onkeydown = function(evt) {\r\n      if (evt.key === \"ArrowUp\") {\r\n        tryMove(player.x, player.y - 1);\r\n      }\r\n      else if (evt.key === \"ArrowDown\") {\r\n        tryMove(player.x, player.y + 1);\r\n      }\r\n      else if (evt.key === \"ArrowLeft\") {\r\n        tryMove(player.x - 1, player.y);\r\n      }\r\n      else if (evt.key === \"ArrowRight\") {\r\n        tryMove(player.x + 1, player.y);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntest.run();"]}